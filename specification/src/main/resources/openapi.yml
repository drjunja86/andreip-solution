openapi: 3.0.3
info:
  title: Avalah exercise
  description: "This swagger is created for the Avalah exercise solution"
  contact:
    name: Andrei Pisponen
    email: andrei.pisponen@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: http://andreip.com/v1
paths:
  /product:
    get:
      tags:
        - Products
      summary: Get list of all products
      operationId: getProducts
      parameters:
        - name: page
          in: query
          description: 'The index of the page to display starting from 1.'
          required: false
          schema:
            type: integer
            minimum: 1
            format: int32
            default: 1
        - name: items
          in: query
          description: 'The number of products to display in one page. Minimunm is 1 and maximum is 100, default is 10'
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            format: int32
            default: 10
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfProducts'
        default:
          description: Generic error
          content: {}
  /product/{productId}:
    get:
      tags:
        - Products
      summary: Get list of other products that have been purchased alongside the given product
      operationId: getRelatedProducts
      parameters:
        - name: productId
          in: path
          description: 'The index of the page to display starting from 1.'
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfRelatedProducts'
        404:
          description: Product with provided id is not found
          content: {}
        default:
          description: Generic error
          content: {}
  /order:
    get:
      tags:
        - Orders
      summary: Get list of all orders
      operationId: getOrders
      parameters:
        - name: page
          in: query
          description: 'The index of the page to display starting from 1.'
          required: false
          schema:
            type: integer
            minimum: 1
            format: int32
            default: 1
        - name: items
          in: query
          description: 'The number of orders to display in one page. Minimunm is 1 and maximum is 100, default is 10'
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            format: int32
            default: 10
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfOrders'
        default:
          description: Generic error
          content: {}

components:
  schemas:
    ArrayOfProducts:
      allOf:
        - $ref: '#/components/schemas/ListItem'
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/Product'
    ArrayOfRelatedProducts:
      type: array
      items:
        $ref: '#/components/schemas/Product'
    ArrayOfOrders:
      allOf:
        - $ref: '#/components/schemas/ListItem'
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/Order'
    Product:
      properties:
        id:
          type: string
          description: product unique id
        name:
          type: string
          description: name of the product
        stock:
          type: integer
          format: int32
          description: amount in stock
        price:
          type: number
          description: price of the product
    Order:
      properties:
        id:
          type: integer
          format: int64
          description: order unique id
        purchaseDate:
          type: string
          format: date-time
          description: Date and time of the purchase
        total:
          type: number
          description: Order total at the time of ordering
        orderLines:
          type: array
          description: array of order lines
          items:
            $ref: '#/components/schemas/OrderLine'
    OrderLine:
      properties:
        productId:
          type: string
          description: purchased product id
        orderId:
          type: integer
          format: int64
          description: related order id
        amount:
          type: integer
          format: int32
          description: number of purchased items
        lineSubtotal:
          type: number
          description: Order line subtotal at the time of ordering
    ListItem:
      properties:
        page:
          type: integer
          format: int32
          description: Current page index (starting from 1)
        itemsPerPage:
          type: integer
          format: int32
          description: Items displayed per page
        totalPages:
          type: integer
          format: int32
          description: Total amount of pages
        totalItems:
          type: integer
          format: int32
          description: Total amount of items

tags:
  - name: Products
    description: Operations with the products
  - name: Orders
    description: Operations with the orders